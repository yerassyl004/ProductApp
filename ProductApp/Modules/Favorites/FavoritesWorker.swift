//
//  FavoritesWorker.swift
//  ProductApp
//
//  Created by Ерасыл Еркин on 04.06.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol FavoritesWorkerProtocol {
    func fetchProductData(completion: @escaping ([Product.ViewModel]) -> Void)
}

class FavoritesWorker: FavoritesWorkerProtocol {
    let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext
    
    func fetchProductData(completion: @escaping ([Product.ViewModel]) -> Void) {
        let dataArray = getFavoriteProducts()
        
        let viewModelArray = dataArray.map { Product.ViewModel(productData: $0) }
        completion(viewModelArray)
    }
    
    func getFavoriteProducts() -> [ProductData] {
        let fetchRequest: NSFetchRequest<ProductData> = ProductData.fetchRequest()
        fetchRequest.predicate = NSPredicate(format: "isAdded == %@", NSNumber(value: true))
            
        do {
            let favoriteProducts = try context.fetch(fetchRequest)
            return favoriteProducts
        } catch let error {
            print("Failed to fetch favorite products with error: \(error)")
            return []
        }
    }
}
