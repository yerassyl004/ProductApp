//
//  FavoritesViewController.swift
//  ProductApp
//
//  Created by Ерасыл Еркин on 04.06.2024.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoritesDisplayLogic: AnyObject {
    func displayProductData(viewModel: [Product.ViewModel])
}

final class FavoritesViewController: UIViewController {
    
    // MARK: - Deps
    var interactor: FavoritesBusinessLogic?
    var router: (NSObjectProtocol & FavoritesRoutingLogic & FavoritesDataPassing)?
    var productData = [Product.ViewModel]()
    
    // MARK: - UI
    private lazy var collectionView: UICollectionView = {
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        layout.minimumLineSpacing = 10.0
        
        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        collectionView.registerCell(ProductCollectionViewCell.self)
        collectionView.dataSource = self
        collectionView.delegate = self
        collectionView.showsVerticalScrollIndicator = false
        collectionView.contentInset = UIEdgeInsets(top: 24, left: 0, bottom: 0, right: 0)
        return collectionView
    }()
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigation()
        setupViews()
        setupConstraints()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        interactor?.getProductData()
    }
    
    // MARK: - Setup Views
    private func setupViews() {
        FavoritesConfigurator.shared.configure(viewController: self)
        view.backgroundColor = .systemBackground
        view.addSubview(collectionView)
    }
    
    private func setupNavigation() {
        navigationItem.title = "Избранное"
        navigationController?.navigationBar.prefersLargeTitles = true
        navigationItem.largeTitleDisplayMode = .always
    }
    
    // MARK: - Setup Constraints
    private func setupConstraints() {
        collectionView.snp.makeConstraints { make in
            make.top.bottom.equalToSuperview()
            make.leading.trailing.equalToSuperview().inset(16)
        }
    }
}

extension FavoritesViewController: FavoritesDisplayLogic {
    func displayProductData(viewModel: [Product.ViewModel]) {
        productData = viewModel
        collectionView.reloadData()
    }
}
